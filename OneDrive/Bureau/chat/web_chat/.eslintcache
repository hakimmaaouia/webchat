[{"C:\\Users\\hakim\\OneDrive\\Bureau\\chat\\web_chat\\src\\component\\chat\\chat.tsx":"1","C:\\Users\\hakim\\OneDrive\\Bureau\\chat\\web_chat\\src\\component\\login\\login.tsx":"2","C:\\Users\\hakim\\OneDrive\\Bureau\\chat\\web_chat\\src\\App.tsx":"3","C:\\Users\\hakim\\OneDrive\\Bureau\\chat\\web_chat\\src\\component\\messages\\messages.tsx":"4","C:\\Users\\hakim\\OneDrive\\Bureau\\chat\\web_chat\\src\\index.tsx":"5","C:\\Users\\hakim\\OneDrive\\Bureau\\chat\\web_chat\\src\\component\\messages\\message.tsx":"6","C:\\Users\\hakim\\OneDrive\\Bureau\\chat\\web_chat\\src\\reportWebVitals.ts":"7","C:\\Users\\hakim\\OneDrive\\Bureau\\chat\\web_chat\\src\\component\\input\\input.tsx":"8"},{"size":1026,"mtime":1611432942537,"results":"9","hashOfConfig":"10"},{"size":1592,"mtime":1611489494635,"results":"11","hashOfConfig":"10"},{"size":593,"mtime":1611434068823,"results":"12","hashOfConfig":"10"},{"size":548,"mtime":1611402962348,"results":"13","hashOfConfig":"10"},{"size":500,"mtime":1606856949535,"results":"14","hashOfConfig":"10"},{"size":1652,"mtime":1611432054949,"results":"15","hashOfConfig":"10"},{"size":425,"mtime":1606856949535,"results":"16","hashOfConfig":"10"},{"size":2364,"mtime":1611490467833,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"yaqda2",{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\hakim\\OneDrive\\Bureau\\chat\\web_chat\\src\\component\\chat\\chat.tsx",["37"],"C:\\Users\\hakim\\OneDrive\\Bureau\\chat\\web_chat\\src\\component\\login\\login.tsx",["38"],"C:\\Users\\hakim\\OneDrive\\Bureau\\chat\\web_chat\\src\\App.tsx",[],"C:\\Users\\hakim\\OneDrive\\Bureau\\chat\\web_chat\\src\\component\\messages\\messages.tsx",["39"],"import React, { useState, useEffect } from \"react\";\r\nimport  Message from \"./message\"\r\nimport \"./message.css\"\r\n\r\nconst Messages=({socket}:any)=>{\r\n    const [messages, setmessages] = useState<any[]>([]);\r\n    useEffect(() => {\r\n    socket?.on(\"messages\", (message: any) => {\r\n        setmessages(messages => [...messages, message]);\r\n      })\r\n    },[])\r\n    \r\n    return(\r\n        <div className=\"chatbox\"> \r\n        {messages.map((message:any, i:any) =><Message  key={i} message={message}/>)}\r\n        </div>\r\n    )\r\n}\r\nexport default Messages;\r\n","C:\\Users\\hakim\\OneDrive\\Bureau\\chat\\web_chat\\src\\index.tsx",[],["40","41"],"C:\\Users\\hakim\\OneDrive\\Bureau\\chat\\web_chat\\src\\component\\messages\\message.tsx",["42"],"import React from \"react\";\r\nimport \"./message.css\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Emoji from \"react-emoji-render\";\r\n\r\nconst Adminmessage=({\r\n  message: {\r\n    Name,\r\n    message,\r\n    dates: { date, date_ob, hours, minutes, month, seconds, year },\r\n  },\r\n}: any)=>{\r\n  return(\r\n    <div className=\"message-data-time centre\">\r\n      {message}  {hours}:{minutes}:{seconds} {year}/{month}/{date}\r\n      </div>\r\n  )\r\n}\r\n\r\n\r\n\r\nconst Usermessage=({\r\n  message: {\r\n    Name,\r\n    message,\r\n    dates: { date, date_ob, hours, minutes, month, seconds, year },\r\n  },\r\n}: any)=>{\r\nreturn(\r\n  <div className=\"containerMessage\">\r\n  <div style={{ display: \"flex\"}}>\r\n    <Avatar>{Name[0].toUpperCase()}</Avatar>\r\n    <div className=\"data_name\">\r\n      <span>{Name}</span>{\" \"}\r\n      <span className=\"message-data-time\">\r\n        {hours}:{minutes}:{seconds} {year}/{month}/{date}\r\n      </span>\r\n    </div>\r\n  </div>\r\n  <div className=\"message-box\">\r\n  <Emoji text={message} />\r\n  </div>\r\n</div>\r\n)\r\n}\r\n\r\nconst Mymessage=({\r\n  message: {\r\n    Name,\r\n    message,\r\n    dates: { date, date_ob, hours, minutes, month, seconds, year },\r\n  },\r\n}: any)=>{\r\nreturn(\r\n<div  >\r\n    <div>\r\n     \r\n      <span>\r\n        {hours}:{minutes}:{seconds} {year}/{month}/{date}\r\n      </span>\r\n      {\"  \"} <span>{Name}</span>{\"  \"}\r\n    <Avatar>{Name[0].toUpperCase()}</Avatar>\r\n  </div>\r\n  </div>\r\n \r\n\r\n\r\n)\r\n}\r\n\r\n\r\n\r\nconst Message = ({message}: any) => {\r\n  console.log(message.Name);\r\n  \r\n  return (\r\n   <div>\r\n    {message.Name===\"admin\"?<Adminmessage message={message}/>:<Usermessage message={message}/>}\r\n     </div>\r\n  );\r\n};\r\nexport default Message;\r\n","C:\\Users\\hakim\\OneDrive\\Bureau\\chat\\web_chat\\src\\reportWebVitals.ts",[],"C:\\Users\\hakim\\OneDrive\\Bureau\\chat\\web_chat\\src\\component\\input\\input.tsx",[],{"ruleId":"43","severity":1,"message":"44","line":19,"column":6,"nodeType":"45","endLine":19,"endColumn":33,"suggestions":"46"},{"ruleId":"47","severity":1,"message":"48","line":27,"column":9,"nodeType":"49","endLine":27,"endColumn":55},{"ruleId":"43","severity":1,"message":"50","line":11,"column":7,"nodeType":"45","endLine":11,"endColumn":9,"suggestions":"51"},{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","severity":1,"message":"57","line":47,"column":7,"nodeType":"58","messageId":"59","endLine":47,"endColumn":16},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'Name' and 'Room'. Either include them or remove the dependency array.","ArrayExpression",["60"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has a missing dependency: 'socket'. Either include it or remove the dependency array.",["61"],"no-native-reassign",["62"],"no-negated-in-lhs",["63"],"@typescript-eslint/no-unused-vars","'Mymessage' is assigned a value but never used.","Identifier","unusedVar",{"desc":"64","fix":"65"},{"desc":"66","fix":"67"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [ENDPOINT, Name, Room, location.search]",{"range":"68","text":"69"},"Update the dependencies array to be: [socket]",{"range":"70","text":"71"},[668,695],"[ENDPOINT, Name, Room, location.search]",[350,352],"[socket]"]